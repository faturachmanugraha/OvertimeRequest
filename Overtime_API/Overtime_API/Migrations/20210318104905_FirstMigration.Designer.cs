// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Overtime_API.Context;

namespace Overtime_API.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210318104905_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Overtime_API.Models.Account", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NIK");

                    b.ToTable("TB_M_Account");
                });

            modelBuilder.Entity("Overtime_API.Models.AccountRole", b =>
                {
                    b.Property<string>("AccountNIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("AccountNIK", "RoleID");

                    b.HasIndex("RoleID");

                    b.ToTable("TB_T_AccountRole");
                });

            modelBuilder.Entity("Overtime_API.Models.Activity", b =>
                {
                    b.Property<int>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdditionalSalary")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OvertimeApplicationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ActivityID");

                    b.HasIndex("OvertimeApplicationID");

                    b.ToTable("TB_T_Activity");
                });

            modelBuilder.Entity("Overtime_API.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("TB_M_Client");
                });

            modelBuilder.Entity("Overtime_API.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIKManager")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("TB_M_Department");
                });

            modelBuilder.Entity("Overtime_API.Models.Employee", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("NIK");

                    b.HasAlternateKey("Email");

                    b.HasAlternateKey("PhoneNumber");

                    b.HasIndex("ClientID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("PositionID");

                    b.ToTable("TB_M_Employee");
                });

            modelBuilder.Entity("Overtime_API.Models.OvertimeApplication", b =>
                {
                    b.Property<int>("OvertimeApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OvertimeDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("OvertimeID")
                        .HasColumnType("int");

                    b.Property<int>("StatusFinance")
                        .HasColumnType("int");

                    b.Property<int>("StatusManager")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OvertimeApplicationID");

                    b.HasIndex("OvertimeID");

                    b.ToTable("TB_T_OvertimeApplication");
                });

            modelBuilder.Entity("Overtime_API.Models.OvertimeData", b =>
                {
                    b.Property<int>("OvertimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NIK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OvertimeID");

                    b.HasIndex("NIK")
                        .IsUnique();

                    b.ToTable("TB_T_OvertimeData");
                });

            modelBuilder.Entity("Overtime_API.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionID");

                    b.ToTable("TB_M_Position");
                });

            modelBuilder.Entity("Overtime_API.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("TB_M_Role");
                });

            modelBuilder.Entity("Overtime_API.Models.Account", b =>
                {
                    b.HasOne("Overtime_API.Models.Employee", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("Overtime_API.Models.Account", "NIK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Overtime_API.Models.AccountRole", b =>
                {
                    b.HasOne("Overtime_API.Models.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("AccountNIK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overtime_API.Models.Role", "Role")
                        .WithMany("AccountRole")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Overtime_API.Models.Activity", b =>
                {
                    b.HasOne("Overtime_API.Models.OvertimeApplication", "OvertimeApplication")
                        .WithMany("Activities")
                        .HasForeignKey("OvertimeApplicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OvertimeApplication");
                });

            modelBuilder.Entity("Overtime_API.Models.Employee", b =>
                {
                    b.HasOne("Overtime_API.Models.Client", "Client")
                        .WithMany("Employees")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overtime_API.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overtime_API.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Overtime_API.Models.OvertimeApplication", b =>
                {
                    b.HasOne("Overtime_API.Models.OvertimeData", "OvertimeData")
                        .WithMany("OvertimeApplication")
                        .HasForeignKey("OvertimeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OvertimeData");
                });

            modelBuilder.Entity("Overtime_API.Models.OvertimeData", b =>
                {
                    b.HasOne("Overtime_API.Models.Employee", "Employee")
                        .WithOne("OvertimeData")
                        .HasForeignKey("Overtime_API.Models.OvertimeData", "NIK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Overtime_API.Models.Account", b =>
                {
                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("Overtime_API.Models.Client", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Overtime_API.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Overtime_API.Models.Employee", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("OvertimeData");
                });

            modelBuilder.Entity("Overtime_API.Models.OvertimeApplication", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Overtime_API.Models.OvertimeData", b =>
                {
                    b.Navigation("OvertimeApplication");
                });

            modelBuilder.Entity("Overtime_API.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Overtime_API.Models.Role", b =>
                {
                    b.Navigation("AccountRole");
                });
#pragma warning restore 612, 618
        }
    }
}
